# Load packages
library(ggplot2)
library(tidyverse)
library(corrplot)
library(plotly)
library(caTools)
library(caret)
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load packages
library(ggplot2)
library(tidyverse)
library(corrplot)
library(plotly)
library(caTools)
library(caret)
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
setwd("~/data_analysis/data_analytic_projects/predictive_analytics/regression/predict_diamond_price")
# Load the data
diamonds <- read.csv("diamonds")
# Load the data
diamonds <- read.csv("diamonds.csv")
setwd("~/data_analysis/data_analytic_projects/predictive_analytics/regression/predict_diamond_price")
# Load the data
diamonds <- read.csv("diamonds.csv")
# inspect first few rows
head(diamonds)
# have a glimpse on data
glimpse(diamonds)
# check data summary
summary(diamonds)
# Load packages
library(ggplot2)
library(tidyverse)
library(corrplot)
library(plotly)
library(caTools)
library(caret)
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
#diamonds <- read.csv("diamonds.csv")
new_diamonds <- read.csv("new-diamonds.csv")
# Load the data
#diamonds <- read.csv("diamonds.csv")
#new_diamonds <- read.csv("new-diamonds.csv")
# check data dimension
dim(diamonds)
dim(new_diamonds)
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load the data
diamonds <- read.csv("diamonds.csv")
# Load packages
library(ggplot2)
library(tidyverse)
library(corrplot)
library(plotly)
library(caTools)
library(caret)
# Load the data
diamonds <- read.csv("diamonds.csv")
new_diamonds <- read.csv("new-diamonds.csv")
# check data dimension
dim(diamonds)
dim(new_diamonds)
# inspect first few rows
head(diamonds)
# have a glimpse on data
glimpse(diamonds)
# check data summary
summary(diamonds)
summary(new_diamonds)
# remove first column as it is not useful
diamonds <- diamonds[-1]
# select predictive variables for model
diamonds <- select(diamonds, carat, cut, color, clarity, price)
# inspect first few rows after data cleaning
head(diamonds)
# split data into train and test sets, with 90% for train sets
set.seed(227)
sample <- sample.int(n = nrow(diamonds), size = floor(0.9*nrow(diamonds)), replace = F)
train <- diamonds[sample,]
test <- diamonds[-sample,]
# Plot the relation between carat and price
ggplot(diamonds, aes(x=carat, y=price)) + geom_point() + geom_smooth(method = "lm")
# Plot the relation between cut and price
ggplot(diamonds, aes(x=cut, y=price)) + geom_point(alpha=0.1) + geom_smooth(method = "lm")
# Try boxplot
ggplot(diamonds, aes(x=cut, y=price)) + geom_boxplot() + geom_smooth(method = "lm")
# Train the model by train dataset
lmMod <- lm(price ~ ., data = train)
# Predict the price for test dataset
distPred <- predict(lmMod, test)
summary(lmMod)
# combine actual and predict data
actual_pred <- data.frame(cbind(actuals=test$price, preds=distPred))
# check correlation of actual and predicted data
cor(actual_pred)
# check the summary of the actual and predicted price
summary(actual_pred)
# Predict the price for new diamonds
new_diamonds <- select(new_diamonds, carat, cut, color, clarity)
new_pred <- predict(lmMod, new_diamonds)
# Calulate the bid price for new diamonds
sum(new_pred)
# Train the model with original data set
linearMod <- train(price ~ ., data = diamonds, method = 'lm',
trControl = trainControl(
method = 'cv',
number = 10,
verboseIter = TRUE
))
print(linearMod)
summary(linearMod)
# use the model to predict new diamonds
pricePred <- predict(linearMod, newdata=new_diamonds)
new_pred <- predict(lmMod, new_diamonds)
# Calulate the bid price for new diamonds
sum(pricePred)
sum(new_pred)
length(pricePred)
length(new_pred)
# Calulate the bid price for new diamonds
sum(pricePred)
sum(new_pred)
summary(pricePred)
summary(new_pred)
length(pricePred)
length(new_pred)
# Calulate the bid price for new diamonds
sum(pricePred)
sum(new_pred)
summary(test$price)
summary(pricePred)
summary(new_pred)
length(pricePred)
length(new_pred)
